"use strict";

var _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };

var flow = _interopRequire(require("lodash.flow"));

var hljs = _interopRequire(require("highlight.js"));

var escapeHtml = require("markdown-it/lib/common/utils").escapeHtml;

var maybe = function (f) {
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    try {
      return f.apply(undefined, args);
    } catch (e) {
      return false;
    }
  };
};

var get = function (name) {
  return function (x) {
    return x[name];
  };
};
var maybeValue = function (f) {
  return maybe(flow(f, get("value")));
};

var highlight = function (code, lang) {
  return maybeValue(hljs.highlight)(lang, code, true) || maybeValue(hljs.highlightAuto)(code) || "";
};

module.exports = function (md) {
  md.options.highlight = highlight;

  var originalFence = md.renderer.rules.fence;

  md.renderer.rules.fence = function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return originalFence.apply(this, args).replace("<code class=\"", "<code class=\"hljs ").replace("<code>", "<code class=\"hljs\">");
  };
};
